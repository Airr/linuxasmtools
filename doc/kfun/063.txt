
----------------------------------------------------------------------------
 63 dup2           - duplicate a file descriptor
----------------------------------------------------------------------------
  mov   eax,063         ;dup2
  mov   ebx,oldfd       ;file descriptor to duplicate
  mov   ecx,newfd       ;new descriptor to assign
  int   80h

       dup2 create a copy of the file descriptor oldfd.

       After successful return of dup2, the old and new descriptors may
       be used interchangeably. They share locks, file position  pointers  and
       flags;  for example, if the file position is modified by using lseek on
       one of the descriptors, the position is also changed for the other.

       The two descriptors do not share the close-on-exec flag, however.

       dup2  makes  newfd  be the copy of oldfd, closing newfd first if neces-
       sary.

RETURN VALUE
       dup and dup2 return the new descriptor, or a negative error code

ERRORS
       EBADF  oldfd  isn't  an  open  file  descriptor, or newfd is out of the
              allowed range for file descriptors.

       EMFILE The process already has the maximum number of  file  descriptors
              open and tried to open a new one.

       EINTR  The dup2 call was interrupted by a signal.

       EBUSY  (Linux  only)  This may be returned by dup2 during a race condi-
              tion with open() and dup().

WARNING
       The  error  returned  by  dup2  is  different  from  that  returned  by
       fcntl(...,  F_DUPFD,  ...)  when newfd is out of range. On some systems
       dup2 also sometimes returns EINVAL like F_DUPFD.

BUGS
       If newfd was open, any errors that would have been reported at  close()
       time,  are lost. A careful programmer will not use dup2 without closing
       newfd first.

SEE ALSO
       fcntl, open, close dup


